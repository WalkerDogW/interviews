package site.javaee.interviews.atguigu.one.A014_Redis持久化;

/**
 * @author Tao
 * @Date 2020/8/17
 * @Time 9:11
 */
public class Persistence {
    /*
    RDB：
        概念：
            在指定的时间间隔内将内存中的数据集快照写入磁盘，也就是Snapshot快照，
            它恢复时是将快照文件直接读到内存里。
        过程：
            Redis会单独创建Fork一个子进程来进行持久化，会先将数据写入到一个临时文件中，
            待持久化过程结束，再用这个临时文件替换上次持久化好的文件。
        优点：
            整个过程中主进程不进行任何IO操作，确保极高的性能。
            如果需要进行大规模数据的恢复，且对数据恢复的完整性不是很敏感，那RDB的方式要比AOF方式更加高效。
            节省磁盘空间，恢复速度快
        缺点：
            虽然Redis在Fork时使用了写时拷贝技术，但如果数据庞大时比较消耗性能
            最后一次持久化后的数据可能丢失



    AOF
        过程：
            以日志的形式来记录每一个写操作，只许追加文件不能改写文件。Redis启动时会读取该文件重新构建数据。
            即Redis重启的话就会根据日志文件内容将写指令从前到后执行一次以完成数据的恢复工作

        优点：
            备份机制更加稳健，丢失数据概率低。
            可读的日志文本，通过操作AOF稳健，可以处理误操作。
        缺点：
            必去RDB占用更多的磁盘空间。
            恢复备份速度更慢。
            每次读写都同步有性能压力。
            存在个别Bug造成恢复不能。
     */
}
